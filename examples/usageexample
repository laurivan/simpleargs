#!/usr/bin/env bash

sa_short_description="demonstrates automatic documentation functionality"
sa_long_description=( "Demonstrates simpleargs functionality related to automatically generated documentation."
                      "The documentation is generated by using the option and parameter definitions written in the script header. Both the manual page and the shorter usage help are cached: man page as troff formatted gz archive, usage help as plain text."
                      "The definitions in this script can be complemented at any time to demonstrate and test simpleargs capabilities." )

log_level=${log_level:-WARN}
# -------------------------------- simpleargs --------------------------------
. "${SIMPLEARGS}" || { echo "Error loading '${SIMPLEARGS}'" >&2; exit 1; }
sa_parse "$0" \
         -p/--port port \
         @doc="TCP port used to connect to the server. By default '@{d}' is used.@endshortdoc@ Port must be greater than 1024." \
         @doc="The port must match the one configured in server.xml of the Tomcat instance. Note that the client currently only supports HTTP. Hence, HTTPS port cannot be used." \
         @default=8080 \
         -s/--sort/--sort-order \
         @doc="Sort results. The possible sorting criteria are name, size and date. By default, sort in ascending order." \
         @doc="Note that the sorting behaviour is undefined if non UTF8 characters are encountered." \
         @validvalues=name,size,date \
         -- \
         "<input video>" \
         @doc="Video to be compressed. Only mp4 videos are supported." \
         @doc="Input video can be a stream. Maximum bitrate for the video is 5 Mbit/s. Audio streams are not supported." \
         "<output video>" \
         @doc="Compressed output video to be generated.@endshortdoc@ Existing videos are not overwritten. That is, the output video should not exist." \
         @@!exists \
         "[<log file>]" \
         @doc="Optional log file. If not provided output is printed to stdout." \
         @doc="Note that log file can be a named pipe or a TCP socket. If an ordinary file is used it should not exist."

sa_end_parse $?; sa_process "$@"; sa_end_process $?; eval "set -- ${sa_args}"
# ----------------------------------------------------------------------------

sa_display_usage
