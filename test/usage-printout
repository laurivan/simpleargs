#!/usr/bin/env bash

sa_default_tokens=()

sa_short_description="demonstrates automatic documentation functionality"
sa_long_description=( "Demonstrates simpleargs functionality related to automatically generated documentation."
                      "The documentation is generated by using the option and parameter definitions written in the script header. Both the manual page and the shorter usage help are cached: man page as troff formatted gz archive, usage help as a plain text file."
                      "The definitions in this script can be complemented at any time to demonstrate and test simpleargs capabilities." )

######### Minimal example header #########
. ../target/simpleargs-bundle; source_result=$?

[ "$source_result" -eq 0 ] &&
  sa_parse "$0" \
           -p/--port port @doc="TCP port used to connect to the server. By default '@{d}' is used.@endshortdoc@ Port must be greater than 1024." \
                          @doc="The port must match the one configured in server.xml of the Tomcat instance. Note that the client currently only supports HTTP. Hence, HTTPS port cannot be used." \
                          @default=8080 \
           -s/--sort/--sort-order @doc="Sort results. The possible sorting criteria are name, size and date. By default, sort in ascending order." \
                                  @doc="Note that the sorting behaviour is undefined if non UTF8 characters are encountered." \
                                  @validvalues=name,size,date \
           -k/--password @optionalvalue \
           --operations @multivalue: @doc="A list of operations to be executed." \
           --pattern @multivalue @doc="One or more patterns to be analyzed." \
           --fruit apple@default,orange,banana @doc="Fruit to eat. Possible values: @{v} (default: @{d})." \
           "<input video>" @doc="Video to be compressed. Only mp4 videos are supported." \
                            @doc="Input video can be a stream. Maximum bitrate for the video is 5 Mbit/s. Audio streams are not supported." \
           "<output video>" @doc="Compressed output video to be generated.@endshortdoc@ Existing videos are not overwritten. That is, the output video should not exist." \
                            @@!exists \
           "[<log file>]" @doc="Optional log file. If not provided output is printed to stdout." \
                          @doc="Note that log file can be a named pipe or a TCP socket. If an ordinary file is used it should not exist." \
           "[<workspace>]" @validvalues=home@default,work,garage \
                          @doc="Workspace to be used. Possible values: @{v} (default: @{d})." \
           "[<socket>]"

parse_result=$?
[ "$parse_result" -eq 0 ] &&
    sa_process "$@"; process_result=$?
[ "$process_result" -eq 0 ] &&
    eval "set -- ${sa_args}"
###########################################

test_valid() {
    # input.mp4 output.mp4
    #clearcache
    #before export log_level=OFF
    value 0 source_result parse_result process_result
    [ $# -eq 0 ]

    log_level=WARN
    sa_display_usage > ${sa_test_dir}/simpleargs-usage-printout
    diff resources/${sa_script_name}_${FUNCNAME}-output.txt ${sa_test_dir}/simpleargs-usage-printout
}

test_valid_with_logging() {
    # input.mp4 output.mp4
    #clearcache
    #before export log_level=FINEST
    value 0 source_result parse_result process_result
    [ $# -eq 0 ]

    log_level=WARN
    sa_display_usage > ${sa_test_dir}/simpleargs-usage-printout
    diff resources/${sa_script_name}_test_valid-output.txt ${sa_test_dir}/simpleargs-usage-printout
}

test_custom_synopsis() {
    # input.mp4 output.mp4
    #clearcache
    #before export log_level=OFF
    #before export sa_synopsis_text="Usage: usage-printout [options] -- [params]..."
    value 0 source_result parse_result process_result
    [ $# -eq 0 ]

    log_level=WARN
    sa_display_usage > ${sa_test_dir}/simpleargs-usage-printout
    diff resources/${sa_script_name}_${FUNCNAME}-output.txt ${sa_test_dir}/simpleargs-usage-printout
}

test_custom_synopsis_with_logging() {
    # input.mp4 output.mp4
    #clearcache
    #before export log_level=FINEST
    #before export sa_synopsis_text="Usage: usage-printout [options] -- [params]..."
    value 0 source_result parse_result process_result
    [ $# -eq 0 ]

    log_level=WARN
    sa_display_usage > ${sa_test_dir}/simpleargs-usage-printout
    diff resources/${sa_script_name}_test_custom_synopsis-output.txt ${sa_test_dir}/simpleargs-usage-printout
}
