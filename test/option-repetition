#!/usr/bin/env bash

######### Minimal example header #########
. ../target/simpleargs-bundle; source_result=$?

[ "$source_result" -eq 0 ] &&
    sa_parse "$0" \
             -v/--verbose @allowrepeat \
             -t

parse_result=$?
[ "$parse_result" -eq 0 ] &&
    sa_process "$@"; process_result=$?
[ "$process_result" -eq 0 ] &&
    eval "set -- ${sa_args}"
###########################################

test_zero_repetitions() {
    #
    value 0 source_result parse_result process_result
    value false v verbose
    value 0 v_count verbose_count
    [ $# -eq 0 ]
}

test_one_repetitions() {
    # -v
    value 0 source_result parse_result process_result
    value true v verbose
    value 1 v_count verbose_count
    [ $# -eq 0 ]
}

test_two_repetitions() {
    # -v -v
    value 0 source_result parse_result process_result
    value true v verbose
    value 2 v_count verbose_count
    [ $# -eq 0 ]
}

test_two_repetitions_short_and_long_flag() {
    # -v pos1 --verbose
    value 0 source_result parse_result process_result
    value true v verbose
    value 2 v_count verbose_count
    [ $# -eq 1 ]
    [ "$1" = pos1 ]
}

test_two_repetitions_combined() {
    # -vv
    value 0 source_result parse_result process_result
    value true v verbose
    value false t
    value 2 v_count verbose_count
    [ $# -eq 0 ]
}

test_normal_option_repetition() {
    # -tt
    value 0 source_result parse_result process_result
    value true t
    empty t_count # t_count not assigned since option has no @allowrepeat directive
    [ $# -eq 0 ]
}
